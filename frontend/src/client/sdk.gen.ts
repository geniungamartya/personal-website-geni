// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise";
import { OpenAPI } from "./core/OpenAPI";
import { request as __request } from "./core/request";
import type {
  GetAllBlogPostsBlogGetResponse,
  CreateBlogPostBlogPostData,
  CreateBlogPostBlogPostResponse,
  GetBlogPostByIdBlogBlogIdGetData,
  GetBlogPostByIdBlogBlogIdGetResponse,
  UpdateBlogPostBlogBlogIdPutData,
  UpdateBlogPostBlogBlogIdPutResponse,
  DeleteBlogPostBlogBlogIdDeleteData,
  DeleteBlogPostBlogBlogIdDeleteResponse,
  HealthCheckHealthGetResponse,
} from "./types.gen";

export class BlogService {
  /**
   * Get All Blog Posts
   * Retrieve all blog posts.
   * @returns BlogPost Successful Response
   * @throws ApiError
   */
  public static getAllBlogPostsBlogGet(): CancelablePromise<GetAllBlogPostsBlogGetResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/blog/",
    });
  }

  /**
   * Create Blog Post
   * Create a new blog post.
   * @param data The data for the request.
   * @param data.requestBody
   * @returns BlogPost Successful Response
   * @throws ApiError
   */
  public static createBlogPostBlogPost(
    data: CreateBlogPostBlogPostData,
  ): CancelablePromise<CreateBlogPostBlogPostResponse> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/blog/",
      body: data.requestBody,
      mediaType: "application/json",
      errors: {
        422: "Validation Error",
      },
    });
  }

  /**
   * Get Blog Post By Id
   * Retrieve a blog post by ID.
   * @param data The data for the request.
   * @param data.blogId
   * @returns BlogPost Successful Response
   * @throws ApiError
   */
  public static getBlogPostByIdBlogBlogIdGet(
    data: GetBlogPostByIdBlogBlogIdGetData,
  ): CancelablePromise<GetBlogPostByIdBlogBlogIdGetResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/blog/{blog_id}",
      path: {
        blog_id: data.blogId,
      },
      errors: {
        422: "Validation Error",
      },
    });
  }

  /**
   * Update Blog Post
   * Update an existing blog post.
   * @param data The data for the request.
   * @param data.blogId
   * @param data.requestBody
   * @returns BlogPost Successful Response
   * @throws ApiError
   */
  public static updateBlogPostBlogBlogIdPut(
    data: UpdateBlogPostBlogBlogIdPutData,
  ): CancelablePromise<UpdateBlogPostBlogBlogIdPutResponse> {
    return __request(OpenAPI, {
      method: "PUT",
      url: "/blog/{blog_id}",
      path: {
        blog_id: data.blogId,
      },
      body: data.requestBody,
      mediaType: "application/json",
      errors: {
        422: "Validation Error",
      },
    });
  }

  /**
   * Delete Blog Post
   * Delete a blog post by ID.
   * @param data The data for the request.
   * @param data.blogId
   * @returns unknown Successful Response
   * @throws ApiError
   */
  public static deleteBlogPostBlogBlogIdDelete(
    data: DeleteBlogPostBlogBlogIdDeleteData,
  ): CancelablePromise<DeleteBlogPostBlogBlogIdDeleteResponse> {
    return __request(OpenAPI, {
      method: "DELETE",
      url: "/blog/{blog_id}",
      path: {
        blog_id: data.blogId,
      },
      errors: {
        422: "Validation Error",
      },
    });
  }
}

export class DefaultService {
  /**
   * Health Check
   * @returns unknown Successful Response
   * @throws ApiError
   */
  public static healthCheckHealthGet(): CancelablePromise<HealthCheckHealthGetResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/health",
    });
  }
}
