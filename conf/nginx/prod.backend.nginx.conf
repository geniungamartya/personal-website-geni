server {
    server_name geniungamartya.xyz www.geniungamartya.xyz;

    # SSL Stuff
    ssl_certificate /etc/ssl/geniungamartya.xyz.pem;
    ssl_certificate_key /etc/ssl/geniungamartya.xyz.key;

    location / {
        proxy_pass http://geni-personal-website:3000;

        # Configure the headers sent to the proxied server
        # This could be important for handling WebSocket connections and other upgraded connections.
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        # Set additional headers to pass along the real client IP address 
        # and the original host requested by the client
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    # ssl_certificate /etc/letsencrypt/live/geniungamartya.xyz/fullchain.pem; # managed by Certbot
    # ssl_certificate_key /etc/letsencrypt/live/geniungamartya.xyz/privkey.pem; # managed by Certbot
    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.geniungamartya.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = geniungamartya.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;
    server_name geniungamartya.xyz www.geniungamartya.xyz;
    return 404; # managed by Certbot
}